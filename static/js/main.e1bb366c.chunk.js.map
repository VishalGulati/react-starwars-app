{"version":3,"sources":["components/Login/login-constants.js","api/api.js","api/api-utils.js","api/api-constants.js","components/Login/login-store.js","components/Search/search-constants.js","components/Search/search-store.js","store/index.js","router/route-constants.js","components/AppHeader/AppHeader.js","components/AppFooter/AppFooter.js","components/Login/Login.js","components/Search/Search.js","components/Search/SearchDetails.js","router/routes.js","App.js","registerServiceWorker.js","index.js"],"names":["LOGIN_ACTION","LOGIN_SUCCESS_ACTION","LOGIN_FAIL_ACTION","authenticate","username","password","Promise","resolve","reject","toLowerCase","indexOf","status","data","error","code","message","getSearchResults","searchText","url","fetch","apiOptions","then","res","json","response","payload","catch","text","errorResponse","Error","JSON","stringify","loginSaga","watchLogin","initialState","isLoading","loginAction","type","loginSuccess","loginFail","action","call","put","takeLatest","SEARCH_ACTION","SEARCH_SUCCESS_ACTION","SEARCH_FAIL_ACTION","searchSaga","watchSearch","searchResults","searchAction","searchTerm","searchSuccess","searchFail","results","sagaMiddleware","createSagaMiddleware","appReducer","combineReducers","login","state","search","middlewares","push","logger","store","createStore","applyMiddleware","run","all","loginRoute","searchDetailsRoute","Header","logout","window","location","href","className","onClick","this","Component","AppFooter","id","target","rel","Login","props","getValidationState","handleUsernameChange","e","setState","value","handlePasswordChange","userLogin","preventDefault","nextProps","history","style","marginTop","htmlFor","placeholder","name","onChange","sm","smOffset","bsStyle","connect","dispatch","bindActionCreators","Search","handleSearch","a","showSearchDetails","item","pathname","params","searchResult","searchResultList","map","i","key","glyph","population","controlId","autoComplete","Addon","length","SearchDetails","searchItemDetails","Object","keys","propName","striped","bordered","condensed","hover","routes","path","component","exact","RouteWithSubRoutes","route","render","CustomRoutes","App","AppHeader","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","ReactDOM","document","getElementById","URL","process","origin","addEventListener","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e1bb366c.chunk.js","sourcesContent":["export const LOGIN_ACTION = 'LOGIN';\r\nexport const LOGIN_SUCCESS_ACTION = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL_ACTION = 'LOGIN_FAIL';\r\n","import { API_BASE_URL, PLANETS_API } from './api-constants';\r\nimport { apiCall } from './api-utils';\r\n\r\n// authenticate\r\nexport const authenticate = ({ username, password }) => {\r\n    let auth = new Promise((resolve, reject) => {\r\n        if (\r\n            username.toLowerCase().indexOf('luke') >= 0 &&\r\n            password.toLowerCase() === '19bby'\r\n        )\r\n            resolve({ status: 200, data: 'authenticated' });\r\n        else\r\n            reject({ status: 400, error: { code: 400, message: 'user not found!' } });\r\n    });\r\n    return auth;\r\n};\r\n\r\n// search api\r\nexport const getSearchResults = searchText =>\r\n    apiCall(`${API_BASE_URL}${PLANETS_API}?search=${searchText}`);\r\n","import { SERVER_ERROR_CODE } from './api-constants';\r\n\r\nexport const options = (method = 'GET', body = null) => {\r\n  let data = {\r\n    method,\r\n    mode: 'cors',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  if (body) {\r\n    data.body = JSON.stringify(body);\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nexport const apiCall = (url, apiOptions) =>\r\n  fetch(url, apiOptions)\r\n    .then(res => {\r\n      if (res.status >= 200 && res.status < 300) {\r\n        return res\r\n          .json()\r\n          .then(response => ({\r\n            payload: response\r\n          }))\r\n          .catch(error => ({\r\n            error\r\n          }));\r\n      } else {\r\n        // Fail if status code is above 300\r\n        return res.text().then(response => ({\r\n          error: response\r\n        }));\r\n      }\r\n    })\r\n    .then(response => {\r\n      if (response.payload && !response.error) {\r\n        return response.payload\r\n      } else {\r\n        // if response contains error, that means we got error\r\n        let errorResponse = {\r\n          message: response.error,\r\n          code: SERVER_ERROR_CODE\r\n        };\r\n        throw new Error(JSON.stringify(errorResponse));\r\n      }\r\n    })\r\n\r\n    .catch(error => {\r\n      // we don't want to throw JavaScript with simple message\r\n      let errorResponse = {\r\n        message: error.message,\r\n        code: SERVER_ERROR_CODE\r\n      };\r\n      throw new Error(JSON.stringify(errorResponse));\r\n    });\r\n","export const API_BASE_URL = 'https://swapi.co/api';\r\nexport const PLANETS_API = '/planets/';\r\n\r\n// error codes\r\nexport const SERVER_ERROR_CODE = '000';\r\n","import { put, takeLatest, call } from 'redux-saga/effects';\r\nimport {\r\n  LOGIN_ACTION,\r\n  LOGIN_SUCCESS_ACTION,\r\n  LOGIN_FAIL_ACTION\r\n} from './login-constants';\r\nimport { authenticate } from '../../api';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  error: null\r\n};\r\n\r\nexport const loginAction = ({ username, password }) => ({\r\n  type: LOGIN_ACTION,\r\n  username,\r\n  password\r\n});\r\n\r\nexport const loginSuccess = data => ({\r\n  type: LOGIN_SUCCESS_ACTION,\r\n  data\r\n});\r\n\r\nexport const loginFail = error => ({\r\n  type: LOGIN_FAIL_ACTION,\r\n  error\r\n});\r\n\r\nexport function* loginSaga(action) {\r\n  try {\r\n    const { username, password } = action;\r\n    const data = yield call(authenticate, { username, password });\r\n    yield put(loginSuccess(data));\r\n  } catch ({ code, message }) {\r\n    yield put(loginFail({ code, message }));\r\n  }\r\n}\r\n\r\nexport function* watchLogin() {\r\n  yield takeLatest(LOGIN_ACTION, loginSaga);\r\n}\r\n\r\nexport default function loginReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOGIN_ACTION:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n\r\n    case LOGIN_SUCCESS_ACTION:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.data\r\n      };\r\n\r\n    case LOGIN_FAIL_ACTION:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const SEARCH_ACTION = 'SEARCH';\r\nexport const SEARCH_SUCCESS_ACTION = 'SEARCH_SUCCESS';\r\nexport const SEARCH_FAIL_ACTION = 'SEARCH_FAIL';\r\n","import { put, takeLatest, call } from 'redux-saga/effects';\r\nimport {\r\n  SEARCH_ACTION,\r\n  SEARCH_SUCCESS_ACTION,\r\n  SEARCH_FAIL_ACTION\r\n} from './search-constants';\r\nimport { getSearchResults } from '../../api';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  searchResults: null,\r\n  error: null\r\n};\r\n\r\nexport const searchAction = searchTerm => ({\r\n  type: SEARCH_ACTION,\r\n  searchTerm\r\n});\r\n\r\nexport const searchSuccess = data => ({\r\n  type: SEARCH_SUCCESS_ACTION,\r\n  data\r\n});\r\n\r\nexport const searchFail = error => ({\r\n  type: SEARCH_FAIL_ACTION,\r\n  error\r\n});\r\n\r\nexport function* searchSaga(action) {\r\n  try {\r\n    const { searchTerm } = action;\r\n    const data = yield call(getSearchResults, searchTerm);\r\n    yield put(searchSuccess(data.results));\r\n  } catch ({ code, message }) {\r\n    yield put(searchFail({ code, message }));\r\n  }\r\n}\r\n\r\nexport function* watchSearch() {\r\n  yield takeLatest(SEARCH_ACTION, searchSaga);\r\n}\r\n\r\nexport default function searchReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SEARCH_ACTION:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n\r\n    case SEARCH_SUCCESS_ACTION:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        searchResults: action.data\r\n      };\r\n\r\n    case SEARCH_FAIL_ACTION:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { all } from 'redux-saga/effects';\r\nimport logger from 'redux-logger';\r\n\r\nimport login, { watchLogin } from '../components/Login/login-store';\r\nimport search, { watchSearch } from '../components/Search/search-store';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst appReducer = combineReducers({\r\n  login,\r\n  search\r\n});\r\n\r\nlet middlewares = [];\r\n\r\nif (process.env.NODE_ENV !== 'test') {\r\n  // skip logger middleware if we are running tests\r\n  middlewares.push(logger);\r\n}\r\n\r\nmiddlewares.push(sagaMiddleware);\r\n\r\nconst store = createStore(appReducer, applyMiddleware(...middlewares));\r\n\r\nsagaMiddleware.run(function* () {\r\n  return yield all([watchLogin(), watchSearch()]);\r\n});\r\n\r\nexport * from '../components/Login/login-store';\r\nexport * from '../components/Search/search-store';\r\n\r\nexport default store;\r\n","export const loginRoute = 'login';\r\nexport const searchRoute = 'search';\r\nexport const searchDetailsRoute = 'searchDetails';\r\n","import React, { Component } from 'react';\r\nimport './header.css';\r\nimport { loginRoute } from '../../router/route-constants';\r\n\r\nclass Header extends Component {\r\n\r\n  logout = () => {\r\n    window.location.href = `/${loginRoute}`\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"app-header\">\r\n        <span>Star Wars</span>\r\n        <div className=\"pull-right app-header__logout\">\r\n          <span onClick={this.logout}>Logout</span>\r\n        </div>\r\n      </header >);\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './AppFooter.css';\r\n\r\n/**\r\n * The application footer\r\n */\r\nconst AppFooter = () => {\r\n  return (\r\n    <footer className=\"app-footer\">\r\n      Designed and Coded by Vishal Gulati (<a\r\n        id=\"footer-link\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        href=\"https://www.vishalgulati.com\"\r\n      >\r\n        www.vishalgulati.com\r\n      </a>)\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default AppFooter;\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Col,\r\n    Button\r\n} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { loginAction } from './login-store';\r\nimport { searchRoute } from '../../router/route-constants';\r\n\r\nexport class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.login !== this.props.login) {\r\n            const { isLoading, error } = nextProps.login;\r\n            if (!isLoading && !error) {\r\n                this.props.history.push(`/${searchRoute}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    getValidationState = () => {\r\n        const { username, password } = this.state;\r\n        if (username && password) return 'success';\r\n        else return 'error';\r\n    };\r\n\r\n    handleUsernameChange = e => {\r\n        this.setState({ username: e.target.value });\r\n    };\r\n\r\n    handlePasswordChange = e => {\r\n        this.setState({ password: e.target.value });\r\n    };\r\n\r\n    userLogin = e => {\r\n        const { username, password } = this.state;\r\n        this.props.loginAction({ username, password });\r\n        e.preventDefault();\r\n    };\r\n\r\n    render() {\r\n        return (<div className=\"login container\">\r\n            <h1 className=\"text-center\" style={{ marginTop: '10px' }}> Login </h1>\r\n            <form className=\"form-horizontal\">\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label col-sm-2\" htmlFor=\"email\">Email:</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"Enter email\" name=\"email\"\r\n                            onChange={this.handleUsernameChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label col-sm-2\" htmlFor=\"pwd\">Password:</label>\r\n                    <Col sm={10} >\r\n                        <input type=\"password\" className=\"form-control\" id=\"pwd\" placeholder=\"Enter password\" name=\"pwd\"\r\n                            onChange={this.handlePasswordChange}\r\n                        />\r\n                    </Col>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <Col smOffset={2}\r\n                        sm={10} >\r\n                        <Button bsStyle=\"primary\"\r\n                            type=\"submit\"\r\n                            onClick={this.userLogin} >\r\n                            Login\r\n                        </Button>\r\n                    </Col>\r\n                </div>\r\n            </form >\r\n        </div >\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ login }) => ({\r\n    login\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ loginAction },\r\n        dispatch\r\n    );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Component } from 'react';\r\nimport {\r\n  PageHeader,\r\n  Form,\r\n  FormGroup,\r\n  Col,\r\n  FormControl,\r\n  InputGroup,\r\n  Glyphicon,\r\n  ListGroup,\r\n  ListGroupItem\r\n} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { searchAction } from './search-store';\r\nimport { searchDetailsRoute } from '../../router/route-constants';\r\n\r\nexport class Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchTerm: '',\r\n      searchResult: []\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.search !== this.props.search) {\r\n      const { isLoading, error } = nextProps.search;\r\n      if (!isLoading && !error) {\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSearch = async e => {\r\n    this.props.searchAction(e.target.value)\r\n  };\r\n\r\n  showSearchDetails = (item) => {\r\n    this.props.history.push({\r\n      pathname: `/${searchDetailsRoute}`,\r\n      params: item\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let searchResultList = [];\r\n    if (this.props.searchResults) {\r\n      searchResultList = this.props.searchResults.map((item, i) => {\r\n        return <ListGroupItem onClick={() => this.showSearchDetails(item)} key={i}>\r\n          <span>{item.name}</span>\r\n          <span className=\"pull-right\"><Glyphicon glyph=\"user\" /> {item.population}</span>\r\n        </ListGroupItem>\r\n      })\r\n    }\r\n\r\n    return (\r\n      <div className=\"search\">\r\n        <PageHeader className=\"text-center\">Search</PageHeader>\r\n        <Form>\r\n          <FormGroup controlId=\"formUsername\">\r\n            <Col sm={12}>\r\n              <InputGroup>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  placeholder=\"Enter search here ...\"\r\n                  autoComplete=\"off\"\r\n                  onChange={this.handleSearch}\r\n                />\r\n                <InputGroup.Addon>\r\n                  <Glyphicon glyph=\"search\" />\r\n                </InputGroup.Addon>\r\n              </InputGroup>\r\n            </Col>\r\n          </FormGroup>\r\n        </Form>\r\n\r\n        {searchResultList.length > 0 &&\r\n          <Col sm={12}>\r\n            <ListGroup>\r\n              {searchResultList}\r\n            </ListGroup>\r\n          </Col>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ search: { searchResults } }) => ({\r\n  searchResults\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      searchAction\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Table\r\n} from 'react-bootstrap';\r\nimport './SearchDetails.css';\r\n\r\nexport default class SearchDetails extends Component {\r\n    render() {\r\n        let searchItemDetails = [];\r\n        if (this.props.location.params) {\r\n            const params = this.props.location.params;\r\n            searchItemDetails = Object.keys(\r\n                params\r\n            ).map((propName, key) => {\r\n                return <tr key={key}>\r\n                    <td>{propName}</td>\r\n                    <td>{params[propName]}</td>\r\n                </tr>\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div >\r\n                <h1>Search Details</h1>\r\n                <Table striped bordered condensed hover className=\"search-details\">\r\n                    <tbody>\r\n                        {searchItemDetails}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { loginRoute, searchRoute, searchDetailsRoute } from './route-constants';\r\nimport Login from '../components/Login/Login';\r\nimport Search from '../components/Search/Search';\r\nimport SearchDetails from '../components/Search/SearchDetails';\r\n\r\n// route config\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    component: Login,\r\n    exact: true\r\n  },\r\n  {\r\n    path: `/${loginRoute}`,\r\n    component: Login\r\n  },\r\n  {\r\n    path: `/${searchRoute}`,\r\n    component: Search\r\n  },\r\n  {\r\n    path: `/${searchDetailsRoute}`,\r\n    component: SearchDetails\r\n  }\r\n];\r\n\r\n// wrap <Route> and use this everywhere instead, then when\r\n// sub routes are added to any route it'll work\r\nconst RouteWithSubRoutes = route => (\r\n  <Route\r\n    path={route.path}\r\n    exact={route.exact}\r\n    render={props => (\r\n      // pass the sub-routes down to keep nesting\r\n      <route.component {...props} routes={route.routes} />\r\n    )}\r\n  />\r\n);\r\n\r\nconst CustomRoutes = () => (\r\n  <main>\r\n    <Switch>\r\n      {routes.map((route, i) => <RouteWithSubRoutes key={i} {...route} />)}\r\n    </Switch>\r\n  </main>\r\n);\r\n\r\nexport default CustomRoutes;\r\n","import React, { Component } from 'react';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './store';\r\nimport AppHeader from './components/AppHeader/AppHeader';\r\nimport AppFooter from './components/AppFooter/AppFooter';\r\nimport CustomRoutes from './router/routes';\r\nimport './app.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Provider store={store}>\r\n          <div className=\"app\">\r\n            <AppHeader />\r\n            <CustomRoutes />\r\n            <AppFooter />\r\n          </div>\r\n        </Provider>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}